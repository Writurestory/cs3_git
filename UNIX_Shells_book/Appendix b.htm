<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Appendix B</title>
<link rel="stylesheet" type="text/css" href="docsafari.css">
<link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>
<table width="100%" border="1" bgcolor="#EBEBFF"><tr><td width="5%" align="left" valign="middle"><a href="Appendix A.htm"><img src="Larrow.gif" width="17" height="19" border="0"></a></td><td align="center" valign="middle"><a class="docLink" href="Front matter.htm">CONTENTS</a></td><td width="5%" align="right" valign="middle"><a href="Appendix C.htm"><img src="Rarrow.gif" width="17" height="19" border="0"></a></td></tr></table>
<h2 class="docAppendixTitle">Appendix B. Comparison of the Shells</h2>
<ul><li>&nbsp;<a class="docLink" href="#app14lev1sec1">B.1 The Shells Compared</a></li>
<li>&nbsp;<a class="docLink" href="#app14lev1sec2">B.2 <span class="docEmphasis">tcsh</span> versus<span class="docEmphasis">csh</span></a></li>
<li>&nbsp;<a class="docLink" href="#app14lev1sec3">B.3 <span class="docEmphasis">bash</span> versus<span class="docEmphasis">sh</span></a></li>
</ul>

<h3 class="docSection1Title" id="app14lev1sec1">B.1 The Shells Compared</h3>
<table cellSpacing="0" cellPadding="1" width="100%" border="1">
  <colgroup span="6" align="left">
  </colgroup>
  <tr>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">
    Feature</span> </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">
    Bourne</span> </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">C</span>
    </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">TC</span>
    </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">Korn</span>
    </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">Bash</span>
    </th>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Aliases </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Advanced Pattern Matching </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Command Line Editing </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes<sup class="docFootnote"><a class="docLink" href="#app02tabfn01">[a]</a></sup>
    </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Directory Stacks (<span class="docEmphasis">pushd,
    popd</span>) </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Filename Completion </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes<sup class="docFootnote"><a class="docLink" href="#app02tabfn01">[a]</a></sup>
    </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Functions </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">History </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Job Control </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Key Binding </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Prompt Formatting </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Spelling Correction </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes<sup class="docFootnote"><a class="docLink" href="#app02tabfn01">[a]</a></sup>
    </td>
    <td class="docTableCell" vAlign="top">no </td>
    <td class="docTableCell" vAlign="top">yes<sup class="docFootnote"><a class="docLink" href="#app02tabfn02">[b]</a></sup>
    </td>
  </tr>
</table>
<blockquote>
  <p class="docFootnote"><sup><a name="app02tabfn01">[a]</a></sup> not a default
  setting; must be set by the user.</p>
</blockquote>
<blockquote>
  <p class="docFootnote"><sup><a name="app02tabfn02">[b]</a></sup>
  <span class="docEmphasis">cdspel</span> is a <span class="docEmphasis">shopt</span>
  option set to correct minor spelling errors in directory names when
  <span class="docEmphasis">cd</span> is used.</p>
</blockquote>
<h3 class="docSection1Title" id="app14lev1sec2">B.2 <span class="docEmphasis">tcsh</span> versus
<span class="docEmphasis">csh</span></h3>
<p class="docText">The TC shell (<span class="docEmphasis">tcsh</span>) is an
enhanced version of the Berkeley C shell (<span class="docEmphasis">csh</span>).
Listed here are some of the new features.</p>
<ul>
  <li>
  <p class="docList">An enhanced history mechanism</li>
  <li>
  <p class="docList">A built-in command line editor (<span class="docEmphasis">emacs</span>
  or <span class="docEmphasis">vi</span>) for editing the command line</li>
  <li>
  <p class="docList">Formatting the prompts</li>
  <li>
  <p class="docList">A spelling correction facility and special prompts for
  spelling correction and looping</li>
  <li>
  <p class="docList">Enhanced and programmed word completion for completing
  commands, filenames, variables, usernames, etc.</li>
  <li>
  <p class="docList">Ability to create and modify key bindings</li>
  <li>
  <p class="docList">Automatic, periodic, and timed events (scheduled events,
  special aliases, automatic logout, terminal locking, etc.)</li>
  <li>
  <p class="docList">New built-in commands (<span class="docEmphasis">hup,</span>
  <span class="docEmphasis">ls –F,</span> <span class="docEmphasis">newgrp,</span>
  <span class="docEmphasis">printenv,</span> <span class="docEmphasis">which,</span>
  <span class="docEmphasis">where,</span> etc.)</li>
  <li>
  <p class="docList">New built-in variables (<span class="docEmphasis">gid,</span>
  <span class="docEmphasis">loginsh,</span> <span class="docEmphasis">oid,</span>
  <span class="docEmphasis">shlvl,</span> <span class="docEmphasis">tty,</span>
  <span class="docEmphasis">uid,</span> <span class="docEmphasis">version,</span>
  <span class="docEmphasis">HOST,</span> <span class="docEmphasis">REMOTEHOST,</span>
  <span class="docEmphasis">VENDOR,</span> <span class="docEmphasis">OSTYPE,</span>
  <span class="docEmphasis">MACHTYPE</span>)</li>
  <li>
  <p class="docList">Read-only variables</li>
  <li>
  <p class="docList">Better bug reporting facility</li>
</ul>
<h3 class="docSection1Title" id="app14lev1sec3">B.3 <span class="docEmphasis">bash</span> versus
<span class="docEmphasis">sh</span></h3>
<p class="docText">The Bourne Again (<span class="docEmphasis">bash</span>)
shell has the following features not found in the traditional Bourne shell (<span class="docEmphasis">sh</span>).</p>
<ul>
  <li>
  <p class="docList">Formatting the prompts</li>
  <li>
  <p class="docList">History (<span class="docEmphasis">csh</span> style)</li>
  <li>
  <p class="docList">Aliases</li>
  <li>
  <p class="docList">A built-in command line editor (emacs or vi) for editing
  the command line</li>
  <li>
  <p class="docList">Directory manipulation with <span class="docEmphasis">pushd</span>
  and <span class="docEmphasis">popd</span></li>
  <li>
  <p class="docList"><span class="docEmphasis">Csh</span>-type job control to
  stop or run jobs in the background, bring them to the foreground, etc. with
  command such as <span class="docEmphasis">bg, fg,</span> Ctrl-Z, etc.</li>
  <li>
  <p class="docList">Tilde, brace, and parameter expansion</li>
  <li>
  <p class="docList">Key bindings to customize key sequences</li>
  <li>
  <p class="docList">Advanced pattern matching</li>
  <li>
  <p class="docList">Arrays</li>
  <li>
  <p class="docList">The <span class="docEmphasis">select</span> loop (from Korn
  shell)</li>
  <li>
  <p class="docList">Many new built-in commands</li>
</ul>
<table cellSpacing="0" cellPadding="1" width="100%" border="1">
  <colgroup span="5" align="left">
  </colgroup>
  <tr>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">
    Feature</span> </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">csh/tcsh</span>
    </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">
    Bourne</span> </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">Bash</span>
    </th>
    <th class="docTableHeader" vAlign="top"><span class="docEmphBoldItalic">Korn</span>
    </th>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Variables:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Assigning values to local variables
    </td>
    <td class="docTableCell" vAlign="top"><tt>set x = 5</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>x=5</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>x=5</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>x=5</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Assigning variable attributes </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top"><tt>declare</tt>
    <span class="docEmphasis"><tt>or</tt></span> <tt>typeset</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>typeset</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Assigning values to environment
    variables </td>
    <td class="docTableCell" vAlign="top"><tt>setenv NAME Bob</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>NAME='Bob'; export NAME</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>export NAME='Bob'</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>export NAME='Bob'</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Read-Only Variables:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Accessing variables </td>
    <td class="docTableCell" vAlign="top">
    <pre>echo $NAME
set var = net
echo ${var}work
<span class="docEmphasis">network</span>
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>echo $NAME
var=net
echo ${var}work
<span class="docEmphasis">network</span>
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>echo $NAME
var=net
echo ${var}work
<span class="docEmphasis">network</span>
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>echo $NAME or print $NAME
var=net
print ${var}work
<span class="docEmphasis">network</span>
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Number of characters </td>
    <td class="docTableCell" vAlign="top"><tt>echo $%var</tt> (<span class="docEmphasis">tcsh</span>
    only) </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>${#var}</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>${#var}</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Special Variables:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">PID of the process </td>
    <td class="docTableCell" vAlign="top"><tt>$$</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$$</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$$</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$$</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Exit status </td>
    <td class="docTableCell" vAlign="top"><tt>$status, $?</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$?</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$?</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$?</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Last background job </td>
    <td class="docTableCell" vAlign="top"><tt>$!</tt> (<span class="docEmphasis">tcsh</span>
    only) </td>
    <td class="docTableCell" vAlign="top"><tt>$!</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$!</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$!</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Arrays:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Assigning arrays </td>
    <td class="docTableCell" vAlign="top"><tt>set x = ( a b c )</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">
    <pre>y[0]='a'; y[2]='b';
   y[2]='c'
fruit=(apples pears
   peaches plums)
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>y[0]='a'; y[1]='b';
   y[2]='c'
set –A fruit apples
   pears plums
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Accessing array elements </td>
    <td class="docTableCell" vAlign="top"><tt>echo $x[1] $x[2]</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>echo ${y[0]} ${y[1]}</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>print ${y[0]} ${y[1]}</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">All elements </td>
    <td class="docTableCell" vAlign="top"><tt>echo $x or $x[*]</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>echo ${y[*]}, ${fruit[0]}</tt>
    </td>
    <td class="docTableCell" vAlign="top"><tt>print ${y[*]}, ${fruit[0]}</tt>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">No. of elements </td>
    <td class="docTableCell" vAlign="top"><tt>echo $#x</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>echo $y{#[*]}</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>print ${#y[*]}</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Command Substitution:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Assigning output of command to
    variable </td>
    <td class="docTableCell" vAlign="top"><tt>set d = `date`</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>d=`date`</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>d=$(date) or d=`date`</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>d=$(date) or d=`date`</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Accessing values </td>
    <td class="docTableCell" vAlign="top">
    <pre>echo $d
echo $d[1], $d[2],
   ...
echo $#d
</pre>
    </td>
    <td class="docTableCell" vAlign="top"><tt>echo $d</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>echo $d</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>print $d</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Command Line Arguments (Positional
    Parameters):</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Accessing </td>
    <td class="docTableCell" vAlign="top">
    <pre>$argv[1], $argv[2]
or
$1, $2 ...
</pre>
    </td>
    <td class="docTableCell" vAlign="top"><tt>$1, $2 ... $9</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$1, $2, ... ${10}</tt> … </td>
    <td class="docTableCell" vAlign="top"><tt>$1, $2, ... ${10}</tt> … </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Setting positional parameters </td>
    <td class="docTableCell" vAlign="top"><tt>N/A</tt> </td>
    <td class="docTableCell" vAlign="top">
    <pre>set a  b c
set `date`
echo $1 $2 ...
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>set a  b c
set `date` <span class="docEmphasis">or</span> set $(date)
echo $1 $2 ...
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>set a  b  c
set `date` or set $(date)
print $1 $2 ...
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">No. of command line arguments </td>
    <td class="docTableCell" vAlign="top">
    <pre>$#argv
$# (<span class="docEmphasis">tcsh</span>)
</pre>
    </td>
    <td class="docTableCell" vAlign="top"><tt>$#</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$#</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>$#</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">No. of characters in $arg[number] </td>
    <td class="docTableCell" vAlign="top"><tt>$%1, $%2, (</tt><span class="docEmphasis"><tt>tcsh</tt></span><tt>)</tt>
    </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Metacharacters for Filename Expansion:</span>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Matches for: </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Single character </td>
    <td class="docTableCell" vAlign="top"><tt>?</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>?</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>?</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>?</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Zero or more characters </td>
    <td class="docTableCell" vAlign="top"><tt>*</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>*</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>*</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>*</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">One character from a set </td>
    <td class="docTableCell" vAlign="top"><tt>[abc]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[abc]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[abc]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[abc]</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">One character from a range of
    characters in a set </td>
    <td class="docTableCell" vAlign="top"><tt>[a–c]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[a–c]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[a-c]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[a–c]</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">One character not in the set </td>
    <td class="docTableCell" vAlign="top">
    <pre>N/A  (<span class="docEmphasis">csh</span>)
[^abc]  (<span class="docEmphasis">tcsh</span>)
</pre>
    </td>
    <td class="docTableCell" vAlign="top"><tt>[!abc]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[!abc]</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>[!abc]</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">? matches zero or one occurrences of
    any pattern in the parentheses. The vertical bar represents an or condition;
    e.g., either 2 or 9. Matches <span class="docEmphasis">abc21,</span>
    <span class="docEmphasis">abc91,</span> or <span class="docEmphasis">abc1.</span>
    </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top"><tt>abc?(2|9)1</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>abc?(2|9)1</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Filenames <span class="docEmphStrong">
    not</span> matching a pattern </td>
    <td class="docTableCell" vAlign="top"><tt>^pattern</tt> (<span class="docEmphasis">tcsh</span>)
    </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">I/O Redirection and Pipes:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Command output redirected to a file
    </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt; file</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Command output redirected and appended
    to a file </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;&gt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;&gt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;&gt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;&gt; file</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Command input redirected from a file
    </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &lt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &lt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &lt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &lt; file</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Command errors redirected to a file
    </td>
    <td class="docTableCell" vAlign="top"><tt>(cmd &gt; /dev/tty)&gt;&amp;errors</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd 2&gt;errors</tt></td>
    <td class="docTableCell" vAlign="top"><tt>cmd 2&gt; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd 2&gt; errors</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Output and errors redirected to a file
    </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;&amp; file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt; file 2&gt;&amp;1</tt> </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &gt;&amp; file or cmd &amp;&gt; file
or cmd &gt; file 2&gt;&amp;1
</pre>
    </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt; file 2&gt;&amp;1</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Assign output and ignore noclobber
    </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;| file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>N/A</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;| file</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd &gt;| file</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">here</span>
    <span class="docEmphasis">document</span> </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &lt;&lt; EOF
input
EOF
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &lt;&lt; EOF
input
EOF
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &lt;&lt; EOF
input
EOF
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &lt;&lt; EOF
input
EOF
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Pipe output of one command to input of
    another command </td>
    <td class="docTableCell" vAlign="top"><tt>cmd | cmd</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd | cmd</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd | cmd</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>cmd | cmd</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Pipe output and error to a command
    </td>
    <td class="docTableCell" vAlign="top"><tt>cmd |&amp; cmd</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">(See coprocesses) </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Coprocess </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>command |&amp;</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Conditional statement </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &amp;&amp; cmd
cmd || cmd
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &amp;&amp; cmd
cmd || cmd
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &amp;&amp; cmd
cmd || cmd
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>cmd &amp;&amp; cmd
cmd || cmd
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Reading from the Keyboard:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Read a line of input and store into
    variable(s) </td>
    <td class="docTableCell" vAlign="top">
    <pre>set var = $&lt;
set var = 'line'
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>read var
read var1 var2...
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>read var
read var1 var2...
read
read -p prompt
read -a arrayname
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>read var
read var1 var2...
read
read var?&quot;Enter value&quot;
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Arithmetic:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Perform calculation </td>
    <td class="docTableCell" vAlign="top"><tt>@ var = 5 + 1</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>var=`expr 5 + 1`</tt> </td>
    <td class="docTableCell" vAlign="top">
    <pre>(( var = 5 + 1 ))
let var=5+1
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>(( var = 5 + 1 ))
let var=5+1
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Tilde Expansion:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Represent home directory of user </td>
    <td class="docTableCell" vAlign="top"><tt>~username</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>~username</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>~username</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Represent home directory </td>
    <td class="docTableCell" vAlign="top"><tt>~</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>~</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>~</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Represent present working directory
    </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>~+</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>~+</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Represent previous working directory
    </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>~-</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>~–</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Aliases:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Create an alias </td>
    <td class="docTableCell" vAlign="top"><tt>alias m more</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>alias m=more</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>alias m=more</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">List aliases </td>
    <td class="docTableCell" vAlign="top"><tt>alias</tt> </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top"><tt>alias, alias -p</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>alias, alias –t</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Remove an alias </td>
    <td class="docTableCell" vAlign="top"><tt>unalias m</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>unalias m</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>unalias m</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">History:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Set history </td>
    <td class="docTableCell" vAlign="top"><tt>set history = 25</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>automatic or HISTSIZE=25</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>automatic or HISTSIZE=25</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Display numbered history list </td>
    <td class="docTableCell" vAlign="top"><tt>history</tt> </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top"><tt>history, fc -l</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>history, fc –l</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Display portion of list selected by
    number </td>
    <td class="docTableCell" vAlign="top"><tt>history 5</tt> </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top"><tt>history 5</tt> </td>
    <td class="docTableCell" vAlign="top">
    <pre>history 5 10
history –5
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Reexecute a command </td>
    <td class="docTableCell" vAlign="top">
    <pre>!! (last command)
!5 (5th command)
!v (last command
starting with v)
</pre>
    </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">
    <pre>!! (last command)
!5 (5th command)
!v (last command starting
   with v)
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>r (last command)
r5 (5th command)
r v (last command starting
    with v)
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Set interactive editor </td>
    <td class="docTableCell" vAlign="top">N/A (<span class="docEmphasis">csh</span>)
    <pre>bindkey -v
or bindkey -e (<span class="docEmphasis">tcsh</span>)
</pre>
    </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">
    <pre>set -o vi
set -o emacs
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>set -o vi
set -o emacs
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Signals:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Command </td>
    <td class="docTableCell" vAlign="top"><tt>onintr</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>trap</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>trap</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>trap</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Initialization Files:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Executed at login </td>
    <td class="docTableCell" vAlign="top"><tt>.login</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>profile</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>bash_profile</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>profile</tt> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Executed every time the shell is
    invoked </td>
    <td class="docTableCell" vAlign="top"><tt>.cshrc</tt> </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">
    <pre>BASH_ENV=.bashrc (or other
filename) (bash 2.x)
ENV=.bashrc
</pre>
    </td>
    <td class="docTableCell" vAlign="top"><tt>ENV=.kshrc</tt> (or other
    filename) </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Functions:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Define a function </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top"><tt>fun() { commands; }</tt> </td>
    <td class="docTableCell" vAlign="top"><tt>function fun { commands; }</tt>
    </td>
    <td class="docTableCell" vAlign="top"><tt>function fun { commands; }</tt>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top">Call a function </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">
    <pre>fun
fun param1 param2 ...
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>fun
fun param1 param2 ...
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>fun
fun param1 param2 ...
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Programming Constructs:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">if</span>
    conditional </td>
    <td class="docTableCell" vAlign="top">
    <pre>if ( expression )
then
     commands
endif
if { ( command ) }
then
     commands
endif
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if [ expression ]
then
     commands
fi
if command
then
     commands
fi
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if [[ string expression ]]
then
     commands
fi
if (( numeric expression ))
then
     commands
fi
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if [[ string expression ]]
then
     commands
fi
if (( numeric expression ))
then
     commands
fi
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">if/else</span>
    conditional </td>
    <td class="docTableCell" vAlign="top">
    <pre>if ( expression )
then
     commands
else
     commands
endif
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if command
then
     commands
else
     …
fi
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if command
then
     commands
else
     …
fi
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if command
then
     commands
else
     …
fi
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">if/else/elseif</span>
    conditional </td>
    <td class="docTableCell" vAlign="top">
    <pre>if (expression) then
     commands
else if (expression) then
     commands
else
     commands
endif
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if command
then
     commands
elif command
then
     commands
else
     commands
fi
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if command
then
     commands
elif command
then
     commands
else
     commands
fi
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>if command
then
     commands
elif command
then
     commands
else
     commands
fi
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">goto</span>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>goto label
...
label:
</pre>
    </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">switch</span>
    and <span class="docEmphasis">case</span> </td>
    <td class="docTableCell" vAlign="top">
    <pre>switch (&quot;$value&quot;)
case pattern1:
     commands
     breaksw
case pattern2:
     commands
     breaksw
default:
     commands
     breaksw
endsw
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>case &quot;$value&quot; in
pattern1) commands
     ;;
pattern2) commands
     ;;
*) commands
     ;;
esac
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>case &quot;$value&quot; in
pattern1) commands
     ;;
pattern2) commands
     ;;
*) commands
     ;;
esac
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>case &quot;$value&quot; in
pattern1) commands
     ;;
pattern2) commands
     ;;
*) commands
     ;;
esac
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top" colSpan="5">
    <span class="docEmphBoldItalic">Loops:</span> </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">while</span>
    loops </td>
    <td class="docTableCell" vAlign="top">
    <pre>while (expression)
     commands
end
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>while command
do
     command
done
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>while command
do
     command
done
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>while command
do
     commands
done
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">for/foreach</span>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>foreach var (wordlist)
     commands
end
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>for var in wordlist
do
     commands
done
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>for var in wordlist
do
     commands
done
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>for var in wordlist
do
     commands
done
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">until</span>
    </td>
    <td class="docTableCell" vAlign="top">&nbsp;</td>
    <td class="docTableCell" vAlign="top">
    <pre>until command
do
     commands
done
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>until command
do
     commands
done
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>until command
do
     commands
done
</pre>
    </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">repeat</span>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre><span class="docEmphasis">repeat</span> 3 &quot;echo hello&quot;
<span class="docEmphasis">hello</span>
<span class="docEmphasis">hello</span>
<span class="docEmphasis">hello</span>
</pre>
    </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
  </tr>
  <tr>
    <td class="docTableCell" vAlign="top"><span class="docEmphasis">select</span>
    </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">N/A </td>
    <td class="docTableCell" vAlign="top">
    <pre>PS3=&quot;Please select a menu item&quot;
select var in wordlist
do
     commands
done
</pre>
    </td>
    <td class="docTableCell" vAlign="top">
    <pre>PS3=&quot;Please select a menu item&quot;
select var in wordlist
do
     commands
done
</pre>
    </td>
  </tr>
</table><p>&nbsp;</p>
<table width="100%" border="1" bgcolor="#EBEBFF"><tr><td width="5%" align="left" valign="middle"><a href="Appendix A.htm"><img src="Larrow.gif" width="17" height="19" border="0"></a></td><td align="center" valign="middle"><a class="docLink" href="Front matter.htm">CONTENTS</a></td><td width="5%" align="right" valign="middle"><a href="Appendix C.htm"><img src="Rarrow.gif" width="17" height="19" border="0"></a></td></tr></table>
</body>

</html>
